<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
	
	<import resource="classpath*:spring-config/ps-storage-applicationContext.xml" />
	
	<context:annotation-config/>
	
	<bean id="connection"
	    class="eu.dime.ps.semantic.connection.Connection">
 		<constructor-arg value="12345"/>
	    <constructor-arg><ref bean="repository"/></constructor-arg>
	</bean>

	<bean id="connectionProviderMock"
	    class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="eu.dime.ps.semantic.connection.ConnectionProvider" />
	</bean>
	
	<bean id="repositoryFactory"
		class="eu.dime.ps.semantic.rdf.impl.SesameMemoryRepositoryFactory"/>

 	<bean id="repository"
 		factory-bean="repositoryFactory"
 		factory-method="get">
 		<constructor-arg value="12345"/>
 	</bean>
		
	<bean id="modelFactory"
		class="eu.dime.ps.semantic.model.ModelFactory">
	</bean>

	<bean id="tripleStore"
		class="ie.deri.smile.rdf.impl.TripleStoreImpl">
		<constructor-arg value="12345"/>
		<constructor-arg><ref bean="repository"/></constructor-arg>
	</bean>

	<bean id="pimoService"
		class="eu.dime.ps.semantic.service.impl.PimoService">
		<constructor-arg><value>default-config.trig</value></constructor-arg>
		<constructor-arg><ref bean="tripleStore"/></constructor-arg>
	</bean>

	<bean id="entityFactory"
	    class="eu.dime.ps.storage.manager.EntityFactory" factory-method="getInstance" lazy-init="false" scope="singleton"/>
	
	<bean id="accountManager"
		class="eu.dime.ps.controllers.infosphere.manager.AccountManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="databoxManager"
		class="eu.dime.ps.controllers.infosphere.manager.DataboxManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="personManager"
		class="eu.dime.ps.controllers.infosphere.manager.PersonManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="profileAttributeManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileAttributeManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="profileCardManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileCardManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>
	
	<bean id="profileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="fileDataMining"
		class="eu.dime.ps.datamining.impl.FileDataMiningImpl">
	</bean>

	<bean id="fileManager"
		class="eu.dime.ps.controllers.infosphere.manager.FileManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
		<property name="fileDataMining" ref="fileDataMining"/>
	</bean>

	<bean id="livePostManager"
		class="eu.dime.ps.controllers.infosphere.manager.LivePostManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>

	<bean id="notifierManagerMock"
	    class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="eu.dime.ps.controllers.notifier.NotifierManager" />
	</bean>

	<bean id="shareableDataboxManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableDataboxManager">
		<property name="connectionProvider" ref="connectionProviderMock"/>
		<property name="databoxManager" ref="databoxManager"/>
		<property name="notifierManager" ref="notifierManagerMock"/>
	</bean>

	<bean id="shareableFileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableFileManager">
		<property name="connectionProvider" ref="connectionProviderMock"/>
		<property name="fileManager" ref="fileManager"/>
		<property name="notifierManager" ref="notifierManagerMock"/>
	</bean>

	<bean id="shareableLivePostManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableLivePostManager">
		<property name="connectionProvider" ref="connectionProviderMock"/>
		<property name="livePostManager" ref="livePostManager"/>
		<property name="notifierManager" ref="notifierManagerMock"/>
	</bean>
	
	<bean id="shareableProfileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableProfileManager">
		<property name="connectionProvider" ref="connectionProviderMock"/>
		<property name="profileCardManager" ref="profileCardManager"/>
		<property name="notifierManager" ref="notifierManagerMock"/>
	</bean>

	<bean id="sharingManager"
		class="eu.dime.ps.controllers.infosphere.manager.SharingManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>
	
	<bean id="situationManager"
		class="eu.dime.ps.controllers.infosphere.manager.SituationManagerImpl">
		<property name="connectionProvider" ref="connectionProviderMock"/>
	</bean>
	
	<bean id="liveContextManager"
		class="eu.dime.ps.controllers.context.LiveContextManager">
		<property name="connectionProvider" ref="connectionProviderMock"/>
 		<property name="situationManager" ref="situationManager"/>
	</bean>
	
	
</beans>