<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd		 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd		 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd		 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd		 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<import resource="classpath*:spring-config/ps-storage-applicationContext.xml" />
	<import resource="classpath*:spring-config/dime-semantic-applicationContext.xml" />
	<import resource="classpath*:spring-config/ps-datamining-applicationContext.xml" />
	<import resource="classpath*:spring-config/dime-contextprocessor-applicationContext.xml" />	
	<import resource="classpath*:spring-config/ps-gateway-applicationContext.xml" />

	<context:property-placeholder location="classpath*:META-INF/*.properties" />
	<context:spring-configured />

	<bean name="dimeAuthenticationProvider" class="eu.dime.ps.controllers.security.authentication.DimeAuthenticationProvider" >
	    <property name="userManager" ref="userManager"></property>
	</bean>
	
		<!-- Security Beans -->
	<!-- Short-term implementation: salt source uses the username property for 
		salting -->
	<bean id="dimePasswordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
		<!-- <property name="encodeHashAsBase64" value="true" ></property> -->
	</bean>
	
	<bean
		class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		id="dimeSaltSource">
		<property name="userPropertyToUse" value="username" />
	</bean>

	<!-- scheduled tasks running in the background -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="timePeriodUpdaterTrigger" />
				<ref bean="situationDetectorTrigger" />
			</list>
		</property>
	</bean>
	
	<!-- bean added by maven profiles using filters -->
	${ps.config.init.poc.data}
	
	<bean id="tenantManager"
		class="eu.dime.ps.controllers.TenantManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="userManager"
		class="eu.dime.ps.controllers.UserManagerImpl">
		<property name="tenantManager" ref="tenantManager"/>
		<property name="personManager" ref="personManager"/>
		<property name="accountManager" ref="accountManager"/>
		<property name="profileManager" ref="profileManager"/>
		<property name="profileCardManager" ref="profileCardManager"/>
		<property name="dimeDNSRegisterService" ref="dimeDNSRegisterService"/>
	</bean>

	<bean id="accountManager"
		class="eu.dime.ps.controllers.infosphere.manager.AccountManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="serviceGateway" ref="serviceGateway"/>
		<property name="serviceCrawlerRegistry" ref="serviceCrawlerRegistry"/>
	</bean>

	<bean id="databoxManager"
		class="eu.dime.ps.controllers.infosphere.manager.DataboxManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="deviceManager"
		class="eu.dime.ps.controllers.infosphere.manager.DeviceManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="eventManager"
		class="eu.dime.ps.controllers.infosphere.manager.EventManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="livePostManager"
		class="eu.dime.ps.controllers.infosphere.manager.LivePostManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="locationManager"
		class="eu.dime.ps.controllers.infosphere.manager.LocationManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="personGroupManager"
		class="eu.dime.ps.controllers.infosphere.manager.PersonGroupManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="personManager"
		class="eu.dime.ps.controllers.infosphere.manager.PersonManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>
	
	<bean id="personMatchManager"
		class="eu.dime.ps.controllers.infosphere.manager.PersonMatchManagerImpl"/>

	<bean id="placemarkManager"
		class="eu.dime.ps.controllers.infosphere.manager.PlacemarkManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="profileCardManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileCardManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="profileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="profileAttributeManager"
		class="eu.dime.ps.controllers.infosphere.manager.ProfileAttributeManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="sharingManager"
		class="eu.dime.ps.controllers.infosphere.manager.SharingManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="fileManager"
		class="eu.dime.ps.controllers.infosphere.manager.FileManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="fileDataMining" ref="fileDataMining"/>
	</bean>

	<bean id="situationManager"
		class="eu.dime.ps.controllers.infosphere.manager.SituationManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>
	
	<bean id="liveContextManager"
		class="eu.dime.ps.controllers.context.LiveContextManager">
		<property name="connectionProvider" ref="connectionProvider"/>
 		<property name="situationManager" ref="situationManager"/>
	</bean>
	
	<bean id="shareableDataboxManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableDataboxManager">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="notifierManager" ref="notifierManager"/>
		<property name="databoxManager" ref="databoxManager"/>
	</bean>

	<bean id="shareableFileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableFileManager">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="notifierManager" ref="notifierManager"/>
		<property name="fileManager" ref="fileManager"/>
	</bean>

	<bean id="shareableLivePostManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableLivePostManager">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="notifierManager" ref="notifierManager"/>
		<property name="livePostManager" ref="livePostManager"/>
	</bean>
	
	<bean id="shareableProfileManager"
		class="eu.dime.ps.controllers.infosphere.manager.ShareableProfileManager">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="notifierManager" ref="notifierManager"/>
		<property name="profileCardManager" ref="profileCardManager"/>
	</bean>

	<bean id="taggingManager"
		class="eu.dime.ps.controllers.infosphere.manager.TaggingManagerImpl">
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>
		
	<bean id="notifyHistory" class="eu.dime.ps.controllers.notifier.impl.NotifyHistoryImpl">
		<property name="entityFactory" ref="entityFactory"/>
	</bean>	

	<bean id="internalNotifyFifo" class="eu.dime.ps.controllers.notifier.NotifyFIFOMultiTenant"></bean>		
	<bean id="externalNotifyFifo" class="eu.dime.ps.controllers.notifier.NotifyFIFOExternal"></bean>	

	<bean id="notifierManager"
		class="eu.dime.ps.controllers.notifier.impl.NotifierManagerImpl">
		<property name="internalNotifyFifo" ref="internalNotifyFifo"/>
		<property name="externalNotifyFifo" ref="externalNotifyFifo"/>
		<property name="notifyHistory" ref="notifyHistory"/>
	</bean>

	<bean id="personMatchingNotifier"
		class="eu.dime.ps.controllers.notification.PersonMatchingNotifier">
		<property name="notifierManager" ref="notifierManager"/>		
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>

	<bean id="crudNotifier"
		class="eu.dime.ps.controllers.notification.CRUDNotifier">
		<property name="notifierManager" ref="notifierManager"/>
	</bean>
	
	<bean id="sharingNotifier"
		class="eu.dime.ps.controllers.notification.SharingNotifier">
		<property name="notifierManager" ref="notifierManager"/>
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>


	<!-- Trust Engine Beans -->
	<bean id="trustEngine" class="eu.dime.ps.controllers.trustengine.impl.TrustEngineImpl">
		<property name="personManager" ref="personManager"/>
		<property name="profileAttributeManager" ref="profileAttributeManager"/>
		<property name="livePostManager" ref="livePostManager"/>
		<property name="connectionProvider" ref="connectionProvider"/>
	</bean>
	
	<bean id="activityDetector"
		class="eu.dime.ps.controllers.context.raw.ActivityDetector" init-method="init">
		<property name="tenantManager" ref="tenantManager"/>
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="policyManager" ref="policyManager"/>
		<property name="accountManager" ref="accountManager"/>
		<property name="serviceGateway" ref="serviceGateway"/>
		<property name="providerManager" ref="contextProcessor"/>
		<property name="personManager" ref="personManager"/>
		<property name="personGroupManager" ref="personGroupManager"/> 
		<property name="userManager" ref="userManager"/>
	</bean>
	
	<bean id="contextManager"
		class="eu.dime.ps.controllers.context.raw.impl.RawContextManagerImpl">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="accountManager" ref="accountManager"/>
		<property name="tenantManager" ref="tenantManager"/>
	</bean>
	
	<bean id="placeProcessor"
		class="eu.dime.ps.controllers.placeprocessor.PlaceProcessor">
		<property name="placemarkManager" ref="placemarkManager"/>
		<property name="accountManager" ref="accountManager"/>
		<property name="serviceGateway" ref="serviceGateway"/>
		<property name="notifierManager" ref="notifierManager"/>
		<property name="contextProcessor" ref="contextProcessor"/>
	</bean>
	
	<bean id="locationContextUpdater"
		class="eu.dime.ps.controllers.context.LocationContextUpdater" init-method="init">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
		<property name="locationManager" ref="locationManager"></property>
		<property name="placeProcessor" ref="placeProcessor"></property>
	</bean>
	
	<bean id="wifiContextUpdater"
		class="eu.dime.ps.controllers.context.WiFiContextUpdater" init-method="init">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
	</bean>
	
	<bean id="peersContextUpdater"
		class="eu.dime.ps.controllers.context.PeersContextUpdater" init-method="init">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
		<property name="personManager" ref="personManager"></property>
		<property name="accountManager" ref="accountManager"></property>
	</bean>
	
	<bean id="activityContextUpdater"
		class="eu.dime.ps.controllers.context.ActivityContextUpdater" init-method="init">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
	</bean>
	
	<bean id="deviceContextUpdater"
		class="eu.dime.ps.controllers.context.DeviceStatusContextUpdater" init-method="init">
		<property name="contextProcessor" ref="contextProcessor"/>
		<property name="tenantManager" ref="tenantManager"/>
		<property name="deviceManager" ref="deviceManager"/>
	</bean>

	<bean id="timePeriodUpdater"
		class="eu.dime.ps.controllers.context.TimePeriodUpdater">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
	</bean>
	
	<bean id="timePeriodUpdaterJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="timePeriodUpdater" />
		<property name="targetMethod" value="update" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="timePeriodUpdaterTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="timePeriodUpdaterJob" />
		<property name="startDelay" value="20000" /><!-- to let the server start up -->
	    <property name="repeatInterval" value="300000" /><!-- every 5 minutes -->
	</bean>
	
	<bean id="situationDetector"
	    class="eu.dime.ps.controllers.situation.SituationDetector">
		<property name="connectionProvider" ref="connectionProvider"/>
		<property name="tenantManager" ref="tenantManager"/>
		<property name="situationManager" ref="situationManager"/>
	    <property name="threshold" value="0.9" />
	</bean>

	<bean id="situationDetectorJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="situationDetector" />
		<property name="targetMethod" value="detect" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="situationDetectorTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="situationDetectorJob" />
		<property name="startDelay" value="20000" /><!-- to let the server start up -->
	    <property name="repeatInterval" value="10000" />
	</bean>
	
	<bean id="evaluationManager"
	    	class="eu.dime.ps.controllers.evaluationtool.EvaluationManagerImpl">
	    	<property name="entityFactory" ref="entityFactory"/>
	</bean>
	
	<bean id="logogEventManager" class="eu.dime.ps.controllers.eventlogger.manager.LogEventManagerImpl">
		<property name="entityFactory" ref="entityFactory"/>
	</bean>
	
	<bean id="dimeDNSRegisterService" 
		class="eu.dime.ps.controllers.account.register.DimeDNSRegisterService">
	</bean>
	
<!--	<bean id="torHSCreationService" 
		class="eu.dime.ps.controllers.security.anonymity.TorHSCreationService">
	</bean>
-->	
	<bean id="advisoryController" class="eu.dime.ps.controllers.trustengine.impl.AdvisoryController">
		<property name="personManager" ref="personManager"/>
		<property name="trustEngine" ref="trustEngine" />
		<property name="personGroupManager" ref="personGroupManager" />
		<property name="connectionProvider" ref="connectionProvider" />
		<property name="profileCardManager" ref="profileCardManager" />
	</bean>
	
	<bean id="trustEngineUpdateService" class="eu.dime.ps.controllers.trustengine.impl.TrustEngineUpdateService">
			<property name="connectionProvider" ref="connectionProvider" />
	</bean>
	
	<bean id="defaultDataSetup" class="eu.dime.ps.controllers.DefaultDataSetup"/>
	
</beans>
